#+TITLE: 漫谈Haskell之一：写一个Scheme解释器吧

* 引子
2013年9月10日，这一天是教师节，但对于一个程序员来说却没有什么特别。我坐在工位上一边翻看着软件的运行日志，一边构思着如何用Haskell实现对日志信息的自动解析，一边刷着微博。突然一条微博推荐的文章引起了我的兴趣。这篇文章(在[[http://norvig.com/lispy.html][这里]]）讲解如何利用Python实现一个简单Lisp语言解释器。印象中已经不止一次看到用某某语言实现Lisp/Scheme解释器的文章。大概因为Lisp语法简洁，又具备程序语言的基本要素，所以才被众多程序员拿来练手。

因为这篇文章的启发，正在学习Haskell的我，也有了利用Haskell实现Lisp解释器并借此熟悉和梳理Haskell的想法。当然，Haskell版的Lisp解释器早已有之，比如[[http://www.defmacro.org/ramblings/lisp-in-haskell.html][这里]]。

* 为什么选择Haskell
 在浸淫于C++编程工作许多年之后，我对这门语言已经有些审美疲劳。C++无疑是一门灵活，强大又严谨的语言。其所支持的多种编程范式如过程式编程、面向对象以及泛型，已经使得程序员从在这些范式多么得，都无法使程序员从对抽象，都无法将程序员从数据与存储
